"""
–ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–π—Ç–∏ –ø–æ –ª–æ–≥–∏–Ω—É-–ø–∞—Ä–æ–ª—é –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∞ —Ç–∞–∫ –∂–µ –≤—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞)
–ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å, —É–∑–Ω–∞—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è, —Å–æ–±—ã—Ç–∏—è –∏–∑ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
–°–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ
–ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç—É–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
–ï—Å–ª–∏ –Ω–∞—Å –¥–æ–±–∞–≤–∏–ª–∏ –≤ —Å–æ–±—ã—Ç–∏–µ –∏–ª–∏ —É–¥–∞–ª–∏–ª–∏, –º—ã –ø–æ–ª—É—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.

–≤ main –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¢–û–õ–¨–ö–û interface
"""


from Backend import Backend
from Utils import check_date
from Calendar import Calendar
from Event import Event
from time import sleep

class Interface:
    backend = None
    tasks_list = list()  # –ª–∏—Å—Ç –æ—á–µ—Ä–µ–¥–∏ –∑–∞–¥–∞—á
    id_user = None  # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ id –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    login_user = None  # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ login –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    @staticmethod
    def work():
        "–ú–æ–¥—É–ª—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–∏ –∑–∞–¥–∞—á"
        Interface.tasks_list = [Interface.start]

        while Interface.tasks_list:
            Interface.tasks_list[0]()
            del Interface.tasks_list[0]
        print("Work –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∑–∞–∫–æ–Ω—á–∏–ª —Ä–∞–±–æ—Ç—É")

    @staticmethod
    def start():
        "–ü–µ—Ä–≤–∏—á–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã"
        Interface.backend = Backend
        Interface.tasks_list.append(Interface.hello)

    @staticmethod
    def hello():
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"
        print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–π —Å –ª—é–±–æ–≤—å—é üòÄ")
        question = input("""
                    –í—ã–±–µ—Ä–∏—Ç–µ:
                    1) –∞–∫–∫–∞—É–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                    2) –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                    """)
        if question == "1":
            Interface.tasks_list.append(Interface.identification_user)
        elif question == "2":
            Interface.tasks_list.append(Interface.creating_user)
        else:
            print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            Interface.tasks_list.append(Interface.hello)

    @staticmethod
    def identification_user():
        "–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        print("–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω")
        login_user = input()
        print("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å")
        flag = Interface.backend.auth_user(login_user, password_user)
        if flag:
            Interface.id_user = flag
            Interface.login_user = login_user
            Interface.tasks_list.append(Interface.main_screen)
            print("–£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!")
            sleep(1)
        else:
            print("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω\–ø–∞—Ä–æ–ª—å, –ª–∏–±–æ –ª–æ–≥–∏–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –ª–æ–≥–∏–Ω –∏–ª–∏ –∑–∞–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π")
            sleep(1)
            question = input("""
            –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
            1) –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å
            2) —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ª–æ–≥–∏–Ω 
            """)
            if question == "1":
                Interface.tasks_list.append(Interface.identification_user)
            elif question == "2":
                Interface.tasks_list.append(Interface.creating_user)
            else:
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
                Interface.tasks_list.append(Interface.identification_user)

    @staticmethod
    def creating_user():
        "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        print("–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω (—Ç–æ–ª—å–∫–æ –õ–ê–¢–ò–ù–°–ö–ò–ï –±—É–∫–≤—ã)")
        login_user = input()
        if not Interface.backend.originality_login(login_user):  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –ª–æ–≥–∏–Ω–∞
            print("–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –ª–æ–≥–∏–Ω, –¥–∞–Ω–Ω—ã–π –ª–æ–≥–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            sleep(1)
            Interface.tasks_list.append(Interface.creating_user)
        else:
            print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è (—Ç–æ–ª—å–∫–æ –õ–ê–¢–ò–ù–°–ö–ò–ï –±—É–∫–≤—ã)")
            name_user = input()
            print("–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é (—Ç–æ–ª—å–∫–æ –õ–ê–¢–ò–ù–°–ö–ò–ï –±—É–∫–≤—ã)")
            lastname_user = input()
            print("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å (—Ç–æ–ª—å–∫–æ –õ–ê–¢–ò–ù–°–ö–ò–ï –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã)")
            password_user = input()
            Interface.login_user = login_user
            Interface.id_user = Interface.backend.reg_user(login_user, name_user, lastname_user, password_user)
            print("–£—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞!")
            print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—å")
            sleep(2)
            Interface.tasks_list.append(Interface.add_calendar)

    @staticmethod
    def main_screen():
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"
        print()
        print('-------------------------------------------------------------------')
        print(f'–¢–µ–∫—É—â–∏–π –ª–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - {Interface.login_user} –∏ id - {Interface.id_user}')
        print('-------------------------------------------------------------------')
        print("""
                    –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
                    ========== –ö–ê–õ–ï–ù–î–ê–†–ò ==========
                    0) –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π
                    1) —Å–æ–∑–¥–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å
                    2) –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ
                    ========== –°–û–ë–´–¢–ò–Ø ==========
                    3) —Å–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ (–≤—ã–±—Ä–∞–≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å)
                    4) —É–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ (–≤—ã–±—Ä–∞–≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å)
                    5) –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–±—ã—Ç–∏–∏ 
                    6) –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
                    7) –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–æ–±—ã—Ç–∏—è –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (–≤—ã–±—Ä–∞–≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å)
                    8) –ø—Ä–∏–≤—è–∑–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ –∫ –¥—Ä—É–≥–æ–º—É –∫–∞–ª–µ–Ω–¥–∞—Ä—é
                    ========== –°–ï–†–í–ò–°–ù–û–ï ==========
                    9) –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
                    10) –≤—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
                    11) –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                    """)

        if Interface.backend.check_id_notification(Interface.id_user):
            print("–ï—Å—Ç—å –Ω–æ–≤—ã–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è, –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–≤–µ–¥–∏—Ç–µ 9")
        question = input()
        if question == "0":
            Interface.tasks_list.append(Interface.show_list_calendar)
        elif question == "1":
            Interface.tasks_list.append(Interface.add_calendar)
        elif question == "2":
            Interface.tasks_list.append(Interface.edit_calendar)
        elif question == "3":
            Interface.tasks_list.append(Interface.add_event)
        elif question == "4":
            Interface.tasks_list.append(Interface.del_event)
        elif question == "5":
            Interface.tasks_list.append(Interface.edit_event)
        elif question == "6":
            Interface.tasks_list.append(Interface.show_events)
        elif question == "7":
            Interface.tasks_list.append(Interface.show_events_range)
        elif question == "8":
            Interface.tasks_list.append(Interface.link_to_another_calendar)
        elif question == "9":
            Interface.tasks_list.append(Interface.show_notification)
        elif question == "10":
            Interface.tasks_list.append(Interface.identification_user)
        elif question == "11":
            Interface.tasks_list.append(Interface.change_user)
        else:
            print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            Interface.tasks_list.append(Interface.main_screen)

    @staticmethod
    def change_user():
        "–ò–∑–º–µ–Ω–∏—Ç—å  –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"
        question = input("""
                            –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
                            1) –∏–∑–º–µ–Ω–∏—Ç—å –∏–º—è
                            2) –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∞–º–∏–ª–∏—é
                            3) –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
                            4) –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
                            """)
        if question == "1":
            Interface.tasks_list.append(Interface.change_name)
        elif question == "2":
            Interface.tasks_list.append(Interface.change_lastname)
        elif question == "3":
            Interface.tasks_list.append(Interface.change_password)
        elif question == "4":
            Interface.tasks_list.append(Interface.main_screen)
        else:
            print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            Interface.tasks_list.append(Interface.change_user)

    @staticmethod
    def change_name():
        "–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        new_name = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è (—Ç–æ–ª—å–∫–æ –õ–ê–¢–ò–ù–°–ö–ò–ï –±—É–∫–≤—ã)")
        Interface.backend.update_user(Interface.login_user, new_name=new_name)
        print("–ò–º—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ")
        Interface.tasks_list.append(Interface.change_user)

    @staticmethod
    def change_lastname():
        "–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–∞–º–∏–ª–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        new_lastname = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ñ–∞–º–∏–ª–∏—é (—Ç–æ–ª—å–∫–æ –õ–ê–¢–ò–ù–°–ö–ò–ï –±—É–∫–≤—ã)")
        Interface.backend.update_user(Interface.login_user, new_lastname=new_lastname)
        print("–§–∞–º–∏–ª–∏—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞")
        Interface.tasks_list.append(Interface.change_user)

    @staticmethod
    def change_password():
        "–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        new_password = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å (—Ç–æ–ª—å–∫–æ –õ–ê–¢–ò–ù–°–ö–ò–ï –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã)")
        Interface.backend.update_user(Interface.login_user, new_password=new_password)
        print("–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω")
        Interface.tasks_list.append(Interface.change_user)

    @staticmethod
    def show_list_calendar():
        "–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π"
        Interface.show_list_calendar_worker()
        Interface.tasks_list.append(Interface.main_screen)
        input('–ù–∞–∂–º–∏—Ç–µ Enter')

    @staticmethod
    def show_list_calendar_worker():
        """–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π:
                        1) –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤ –ø–∞–º—è—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
                        2) –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        """
        Interface.backend.load_file_calendars(Interface.id_user)  # –∑–∞–≥—Ä—É–∂–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        calendar_exist = False
        for elem in Interface.backend.info_calendars():
            if not calendar_exist:
                print('======–°–ø–∏—Å–æ–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π=====')
                calendar_exist = True
            info_calendar = elem.info_calendars()
            print(f"–ö–∞–ª–µ–Ω–¥–∞—Ä—å {info_calendar[1]}, id –∫–∞–ª–µ–Ω–¥–∞—Ä—è {info_calendar[0]}, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—ã—Ç–∏–π {len(info_calendar[3])}")
        if not calendar_exist:
            print('–ö–∞–ª–µ–Ω–¥–∞—Ä–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç! –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å!')
        else:
            print('============================')

    @staticmethod
    def add_calendar():
        "C–æ–∑–¥–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å"
        print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è")
        name_calendar = input()
        Interface.backend.load_file_calendars(target_id_user='*********')  # –∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏
                                                                        # –≤ –ø–∞–º—è—Ç—å backend, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å id_counter
        new_calendar = Calendar(id_user=Interface.id_user, name_calendar=name_calendar)
        Interface.backend.add_calendar(new_calendar)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤ –ø–∞–º—è—Ç—å
        Interface.backend.save_file_calendars(add_calendar=True)  # –¥–æ–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å –∫–∞–ª–µ–Ω–¥–∞—Ä—è–º–∏
        Interface.tasks_list.append(Interface.main_screen)
        print('–ö–∞–ª–µ–Ω–¥–∞—Ä—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω')
        input('–ù–∞–∂–º–∏—Ç–µ Enter')

    @staticmethod
    def edit_calendar():
        "–ò–∑–º–µ–Ω–∏—Ç—å  –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ"
        question = input("""
                                –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
                                1) –∏–∑–º–µ–Ω–∏—Ç—å –∏–º—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
                                2) –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
                                """)
        if question == "1":
            Interface.tasks_list.append(Interface.change_name_calendar)
        elif question == "2":
            Interface.tasks_list.append(Interface.main_screen)
        else:
            print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            sleep(1)
            Interface.tasks_list.append(Interface.edit_calendar)

    @staticmethod
    def change_name_calendar():
        "–ò–∑–º–µ–Ω–∏—Ç—å  –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–º–µ–Ω–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è"
        """
        –ê–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–±–æ—Ç—ã
        1) –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≤—Å–µ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –∏ —Å–ø—Ä–æ—Å–∏—Ç—å, –∫–∞–∫–æ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å (–ø–æ id) —Ö–æ—á–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å
        2) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –≤—ã–±—Ä–∞–ª —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π id –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        3) –í–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        4) –í –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –ø–æ–º–µ—Å—Ç–∏—Ç—å –∏–∑ –ø–∞–º—è—Ç–∏ —Ç—Ä–µ–±—É–µ–º—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∏ –æ–±–Ω–æ–≤–∏—Ç—å —É –Ω–µ–≥–æ –∏–º—è
        5) –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤ –ø–∞–º—è—Ç—å –≤—Å–µ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏
        6) –ü–æ–¥–º–µ–Ω–∏—Ç—å —Ç—Ä–µ–±—É–µ–º—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
        7) –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–∏
        """
        Interface.show_list_calendar_worker()  # –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        target_id_calendar = input("–í–≤–µ–¥–∏—Ç–µ id –∫–∞–ª–µ–Ω–¥–∞—Ä—è, –∏–º—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å\n")
        if not Interface.backend.check_id_calendar(target_id_calendar):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
            print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            Interface.tasks_list.append(Interface.change_name_calendar)
        else:
            new_name_calendar = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è (—Ç–æ–ª—å–∫–æ –õ–ê–¢–ò–ù–°–ö–ò–ï –±—É–∫–≤—ã)\n")
            Interface.backend.update_calendar(target_id_calendar, new_name_calendar)
            print("–ò–º—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ")
            sleep(1)
            Interface.tasks_list.append(Interface.main_screen)

    @staticmethod
    def add_event():
        "C–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ"
        print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å–æ–±—ã—Ç–∏—è (—Ç–æ–ª—å–∫–æ –õ–ê–¢–ò–ù–°–ö–ò–ï –±—É–∫–≤—ã)")
        name_event = input()
        print("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è (—Ç–æ–ª—å–∫–æ –õ–ê–¢–ò–ù–°–ö–ò–ï –±—É–∫–≤—ã)")
        description = input()
        while True:
            print("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Å–æ–±—ã—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD, –Ω–∞–ø—Ä–∏–º–µ—Ä, 2023-01-05")
            date_event = input()
            if check_date(date_event):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤–≤–µ–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–∞—Ç—É
                break
            else:
                print("–î–∞—Ç–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        while True:
            print("""–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ D –∏–ª–∏ W –∏–ª–∏ M –∏–ª–∏ Y –∏–ª–∏ N, –≥–¥–µ:
                                                        D - –µ–∂–µ–¥–Ω–µ–≤–Ω–æ
                                                        W - –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ
                                                        M - –µ–∂–µ–º–µ—Å—è—á–Ω–æ
                                                        Y - –µ–∂–µ–≥–æ–¥–Ω–æ
                                                        N - —Ä–∞–∑–æ–≤–æ""")
            repeat_type = input().upper()
            if (len(repeat_type) == 1) and (repeat_type in ["D", "W", "M", "Y", "N"]):
                if repeat_type == "N":
                    repeat_type = None
                break
            else:
                print("–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        question = input("""
                                        –ë—É–¥–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å –≥–æ—Å—Ç–µ–π:
                                        –¥–∞ - 1
                                        –Ω–µ—Ç - –ª—é–±–æ–π —Å–∏–º–≤–æ–ª
                                        """)
        if question == "1":
            Interface.backend.load_file_users()  # –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ backend
            for elem in Interface.backend.info_users():
                info_user = elem.info_User()
                print(f"–∏–º—è {info_user[1]}, —Ñ–∞–º–∏–ª–∏—è {info_user[2]}, id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {info_user[0]}")
            while True:
                guests = input("–£–∫–∞–∂–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª\n")
                guests = guests.split()
                result = Interface.backend.check_id_users(guests) and Interface.id_user not in guests
                if result:
                    break
                else:
                    print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ, —É–∫–∞–∂–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª\n")
                    print("–°–µ–±—è —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ–ª—å–∑—è\n")
        else:
            guests = []
        Interface.backend.load_file_events(target_id_events=['*********'])  # –∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å–æ–±—ã—Ç–∏–π –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏
                                                                         # –≤ –ø–∞–º—è—Ç—å backend, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å id_counter
        new_event = Event(name_event=name_event, description=description, event_owner=Interface.id_user, guests=guests,
                          data_event=date_event, repeat_type=repeat_type)
        Interface.backend.clear_events()  # –æ—á–∏—â–∞–µ–º –ø–∞–º—è—Ç—å backend –æ—Ç —Å–æ–±—ã—Ç–∏–π
        Interface.backend.add_event(new_event)  # –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ –ø–∞–º—è—Ç—å backend
        Interface.backend.save_file_events(add_event=True)  # –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ —Ñ–∞–π–ª

        """–ê–ª–≥–æ—Ä–∏—Ç–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å:
        1) –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤ –ø–∞–º—è—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        2) –°–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤ –∫–∞–∫–æ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–∞–¥–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ
        3) –ü—Ä–æ–≤–µ—Ä—è–µ–º id –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        4) –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å"""

        print('*********–í—ã–≤–æ–¥–∏–º –≤–∞—à–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏*********')
        Interface.backend.load_file_calendars(Interface.id_user)  # –∑–∞–≥—Ä—É–∂–∞–µ–º –≤ –ø–∞–º—è—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for elem in Interface.backend.info_calendars():
            print(elem)
        while True:
            target_id_calendar = input("–í–≤–µ–¥–∏—Ç–µ id —Å–≤–æ–µ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, –≤ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ—ë —Å–æ–±—ã—Ç–∏–µ\n")
            if not Interface.backend.check_id_calendar(target_id_calendar):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            else:
                break
        Interface.backend.add_event_into_calendar(target_id_calendar, new_event.info_id_event())  # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
                                                                                                # —Å–æ–±—ã—Ç–∏—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å
        Interface.backend.add_event_into_calendar_guest(new_event.info_id_event(), guests, name_event)  # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –≤
                                                                                            # –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≥–æ—Å—Ç–µ–π
        print("–°–æ–±—ã—Ç–∏–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ")
        sleep(1)
        Interface.tasks_list.append(Interface.main_screen)

    @staticmethod
    def show_events():
        "–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≤—Å–µ —Å–æ–±—ã—Ç–∏—è"
        print('*********–í—ã–≤–æ–¥–∏–º –≤–∞—à–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏*********')
        Interface.backend.load_file_calendars(Interface.id_user)  # –∑–∞–≥—Ä—É–∂–∞–µ–º –≤ –ø–∞–º—è—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for elem in Interface.backend.info_calendars():
            print(elem)
        while True:
            target_id_calendar = input("–í–≤–µ–¥–∏—Ç–µ id —Å–≤–æ–µ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, —Å–æ–±—ã—Ç–∏—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å\n")
            if not Interface.backend.check_id_calendar(
                    target_id_calendar):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            else:
                break
        print('*********–í—ã–≤–æ–¥–∏–º —Å–æ–±—ã—Ç–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è*********')
        print("id, –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ, –¥–∞—Ç–∞, –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å, —Å–æ–∑–¥–∞—Ç–µ–ª—å, —É—á–∞—Å—Ç–Ω–∏–∫–∏")
        for elem in Interface.backend.show_events(target_id_calendar):
            print(elem.info_Event())
        sleep(2)
        Interface.tasks_list.append(Interface.main_screen)

    @staticmethod
    def show_events_range():
        "–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–æ–±—ã—Ç–∏—è –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞"
        print('*********–í—ã–≤–æ–¥–∏–º –í–∞—à–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏*********')
        Interface.backend.load_file_calendars(Interface.id_user)  # –∑–∞–≥—Ä—É–∂–∞–µ–º –≤ –ø–∞–º—è—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for elem in Interface.backend.info_calendars():
            print(elem)
        while True:
            target_id_calendar = input("–í–≤–µ–¥–∏—Ç–µ id —Å–≤–æ–µ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, —Å–æ–±—ã—Ç–∏—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å\n")
            if not Interface.backend.check_id_calendar(target_id_calendar):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏
                                                                            # —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            else:
                break
        while True:
            print("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD, –Ω–∞–ø—Ä–∏–º–µ—Ä, 2023-01-05")
            data_from = input()
            if check_date(data_from):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤–≤–µ–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–∞—Ç—É
                break
            else:
                print("–î–∞—Ç–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD, –Ω–∞–ø—Ä–∏–º–µ—Ä, 2023-01-05")
        while True:
            print("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∫–æ–Ω—Ü–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD, –Ω–∞–ø—Ä–∏–º–µ—Ä, 2023-01-05")
            data_to = input()
            if check_date(data_to):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤–≤–µ–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–∞—Ç—É
                break
            else:
                print("–î–∞—Ç–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD, –Ω–∞–ø—Ä–∏–º–µ—Ä, 2023-01-05")
        print('*********–í—ã–≤–æ–¥–∏–º –≤–∞—à–∏ —Å–æ–±—ã—Ç–∏—è –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è*********')
        for elem in Interface.backend.search_events(data_from, data_to, target_id_calendar):
            print(elem)
        sleep(1)
        Interface.tasks_list.append(Interface.main_screen)

    @staticmethod
    def del_event():
        "–£–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ"
        """–ê–ª–≥–æ—Ä–∏—Ç–º:
        1) –í—ã–±–∏—Ä–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏–º —É–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ
        2) –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, –≤—ã–±–∏—Ä–∞–µ–º id —Å–æ–±—ã—Ç–∏—è
        3) –£–¥–∞–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π
        """

        print('*********–í—ã–≤–æ–¥–∏–º –í–∞—à–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏*********')
        Interface.backend.load_file_calendars(Interface.id_user)  # –∑–∞–≥—Ä—É–∂–∞–µ–º –≤ –ø–∞–º—è—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for elem in Interface.backend.info_calendars():
            print(elem)
        while True:
            target_id_calendar = input("–í–≤–µ–¥–∏—Ç–µ id —Å–≤–æ–µ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, —Å–æ–±—ã—Ç–∏–µ –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å\n")
            if not Interface.backend.check_id_calendar(target_id_calendar):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏
                                                                                # —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            else:
                break
        print('*********–í—ã–≤–æ–¥–∏–º —Å–æ–±—ã—Ç–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è*********')
        print("id, –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ, –¥–∞—Ç–∞, –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å, —Å–æ–∑–¥–∞—Ç–µ–ª—å, —É—á–∞—Å—Ç–Ω–∏–∫–∏")
        for elem in Interface.backend.show_events(target_id_calendar):
            print(elem.info_Event())
        while True:
            target_id_event = input("–í–≤–µ–¥–∏—Ç–µ id c–æ–±—ã—Ç–∏—è, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å\n")
            if not Interface.backend.check_id_event(target_id_event):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏
                                                                        # —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            else:
                break
        Interface.backend.del_event_from_calendars(target_id_event)  # —É–¥–∞–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π
        print("–°–æ–±—ã—Ç–∏–µ –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ")
        sleep(2)
        Interface.tasks_list.append(Interface.main_screen)

    @staticmethod
    def link_to_another_calendar():
        "–ü—Ä–∏–≤—è–∑–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ –∫ –¥—Ä—É–≥–æ–º—É –∫–∞–ª–µ–Ω–¥–∞—Ä—é"
        """–ê–ª–≥–æ—Ä–∏—Ç–º:
                1) –í—ã–±–∏—Ä–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏–º –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ
                2) –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, –≤—ã–±–∏—Ä–∞–µ–º id —Å–æ–±—ã—Ç–∏—è
                3) –í—ã–±–∏—Ä–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏–º –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ
                4) –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ –Ω–æ–≤—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
                5) –£–¥–∞–ª—è–µ–º –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
                """
        print('*********–í—ã–≤–æ–¥–∏–º –í–∞—à–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏*********')
        Interface.backend.load_file_calendars(Interface.id_user)  # –∑–∞–≥—Ä—É–∂–∞–µ–º –≤ –ø–∞–º—è—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for elem in Interface.backend.info_calendars():
            print(elem)
        while True:
            source_id_calendar = input("–í–≤–µ–¥–∏—Ç–µ id —Å–≤–æ–µ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, —Å–æ–±—ã—Ç–∏–µ –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å\n")
            if not Interface.backend.check_id_calendar(source_id_calendar):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏
                # —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            else:
                break
        print('*********–í—ã–≤–æ–¥–∏–º —Å–æ–±—ã—Ç–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è*********')
        print("id, –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ, –¥–∞—Ç–∞, –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å, —Å–æ–∑–¥–∞—Ç–µ–ª—å, —É—á–∞—Å—Ç–Ω–∏–∫–∏")
        for elem in Interface.backend.show_events(source_id_calendar):
            print(elem.info_Event())
        while True:
            target_id_event = input("–í–≤–µ–¥–∏—Ç–µ id c–æ–±—ã—Ç–∏—è, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å\n")
            if not Interface.backend.check_id_event(target_id_event):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏
                # —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            else:
                break
        print('*********–í—ã–≤–æ–¥–∏–º –í–∞—à–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏*********')
        Interface.backend.load_file_calendars(Interface.id_user)  # –∑–∞–≥—Ä—É–∂–∞–µ–º –≤ –ø–∞–º—è—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for elem in Interface.backend.info_calendars():
            print(elem)
        while True:
            target_id_calendar = input("–í–≤–µ–¥–∏—Ç–µ id —Å–≤–æ–µ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, —Å–æ–±—ã—Ç–∏–µ –≤ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å\n")
            if (not Interface.backend.check_id_calendar(target_id_calendar)) or (source_id_calendar == target_id_calendar):
                # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏
                # —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            else:
                break
        Interface.backend.move_event_from_calendars(source_id_calendar, target_id_event, target_id_calendar)  # –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º
        # —Å–æ–±—ã—Ç–∏–µ –∫ –¥—Ä—É–≥–æ–º—É –∫–∞–ª–µ–Ω–¥–∞—Ä—é
        print("–°–æ–±—ã—Ç–∏–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–æ")
        sleep(2)
        Interface.tasks_list.append(Interface.main_screen)




    @staticmethod
    def edit_event():
        "–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–±—ã—Ç–∏–∏"
        question = input("""
                                    –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
                                    1) –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
                                    2) –∏–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
                                    3) –¥–æ–±–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
                                    4) —É–¥–∞–ª–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
                                    5) –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
                                    """)
        if question == "1":
            Interface.tasks_list.append(Interface.change_name_event)
        elif question == "2":
            Interface.tasks_list.append(Interface.change_description_event)
        elif question == "3":
            Interface.tasks_list.append(Interface.add_guests_event)
        elif question == "4":
            Interface.tasks_list.append(Interface.del_guests_event)
        elif question == "5":
            Interface.tasks_list.append(Interface.main_screen)
        else:
            print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            Interface.tasks_list.append(Interface.change_user)


    @staticmethod
    def show_notification():
        "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏—è"
        noti = Interface.backend.show_notifications_user(Interface.id_user)
        for elem in noti:
            print(elem)
        input('–û–ø–æ–≤–µ—â–µ–Ω–∏–π –±–æ–ª—å—à–µ –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ Enter')
        Interface.tasks_list.append(Interface.main_screen)

    @staticmethod
    def change_name_event():
        "–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è"
        print('*********–í—ã–≤–æ–¥–∏–º –í–∞—à–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏*********')
        Interface.backend.load_file_calendars(Interface.id_user)  # –∑–∞–≥—Ä—É–∂–∞–µ–º –≤ –ø–∞–º—è—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for elem in Interface.backend.info_calendars():
            print(elem)
        while True:
            source_id_calendar = input("–í–≤–µ–¥–∏—Ç–µ id —Å–≤–æ–µ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, —Å–æ–±—ã—Ç–∏–µ –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å\n")
            if not Interface.backend.check_id_calendar(source_id_calendar):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏
                # —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            else:
                break
        print('*********–í—ã–≤–æ–¥–∏–º —Å–æ–±—ã—Ç–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è*********')
        print("id, –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ, –¥–∞—Ç–∞, –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å, —Å–æ–∑–¥–∞—Ç–µ–ª—å, —É—á–∞—Å—Ç–Ω–∏–∫–∏")
        for elem in Interface.backend.show_events(source_id_calendar):
            print(elem.info_Event())
        while True:
            target_id_event = input("–í–≤–µ–¥–∏—Ç–µ id c–æ–±—ã—Ç–∏—è, –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å\n")
            if not Interface.backend.check_id_event(target_id_event):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏
                # —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            else:
                break
        new_name_event = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è\n")
        Interface.backend.update_name_event(target_id_event, new_name_event)  # –∏–∑–º–µ–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        print("–ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ")
        sleep(2)
        Interface.tasks_list.append(Interface.edit_event)

    @staticmethod
    def change_description_event():
        "–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è"
        print('*********–í—ã–≤–æ–¥–∏–º –í–∞—à–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏*********')
        Interface.backend.load_file_calendars(Interface.id_user)  # –∑–∞–≥—Ä—É–∂–∞–µ–º –≤ –ø–∞–º—è—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for elem in Interface.backend.info_calendars():
            print(elem)
        while True:
            source_id_calendar = input("–í–≤–µ–¥–∏—Ç–µ id —Å–≤–æ–µ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, —Å–æ–±—ã—Ç–∏–µ –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å\n")
            if not Interface.backend.check_id_calendar(source_id_calendar):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏
                # —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            else:
                break
        print('*********–í—ã–≤–æ–¥–∏–º —Å–æ–±—ã—Ç–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è*********')
        print("id, –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ, –¥–∞—Ç–∞, –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å, —Å–æ–∑–¥–∞—Ç–µ–ª—å, —É—á–∞—Å—Ç–Ω–∏–∫–∏")
        for elem in Interface.backend.show_events(source_id_calendar):
            print(elem.info_Event())
        while True:
            target_id_event = input("–í–≤–µ–¥–∏—Ç–µ id c–æ–±—ã—Ç–∏—è, –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å\n")
            if not Interface.backend.check_id_event(target_id_event):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏
                # —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            else:
                break
        new_description_event = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è\n")
        Interface.backend.update_description_event(target_id_event, new_description_event)  # –∏–∑–º–µ–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        print("–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ")
        sleep(2)
        Interface.tasks_list.append(Interface.edit_event)

    @staticmethod
    def add_guests_event():
        "–î–æ–±–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
        print('*********–í—ã–≤–æ–¥–∏–º –í–∞—à–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏*********')
        Interface.backend.load_file_calendars(Interface.id_user)  # –∑–∞–≥—Ä—É–∂–∞–µ–º –≤ –ø–∞–º—è—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for elem in Interface.backend.info_calendars():
            print(elem)
        while True:
            source_id_calendar = input("–í–≤–µ–¥–∏—Ç–µ id —Å–≤–æ–µ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, —Å–æ–±—ã—Ç–∏–µ –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å\n")
            if not Interface.backend.check_id_calendar(source_id_calendar):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏
                # —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            else:
                break
        print('*********–í—ã–≤–æ–¥–∏–º —Å–æ–±—ã—Ç–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è*********')
        print("id, –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ, –¥–∞—Ç–∞, –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å, —Å–æ–∑–¥–∞—Ç–µ–ª—å, —É—á–∞—Å—Ç–Ω–∏–∫–∏")
        for elem in Interface.backend.show_events(source_id_calendar):
            print(elem.info_Event())
        while True:
            target_id_event = input("–í–≤–µ–¥–∏—Ç–µ id c–æ–±—ã—Ç–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n")
            if not Interface.backend.check_id_event(target_id_event):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏
                # —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            else:
                break
        Interface.backend.load_file_users()  # –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ backend
        for elem in Interface.backend.info_users():
            info_user = elem.info_User()
            print(f"–∏–º—è {info_user[1]}, —Ñ–∞–º–∏–ª–∏—è {info_user[2]}, id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {info_user[0]}")
        while True:
            guests = input("–£–∫–∞–∂–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª, –∫–æ—Ç–æ—Ä—ã—Ö —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–æ–±—ã—Ç–∏–µ\n")
            guests = guests.split()
            result = ((Interface.backend.check_id_users(guests)) and (Interface.id_user not in guests) and
                      not(Interface.backend.check_id_users_event(guests, target_id_event, "any")))
            if result:
                break
            else:
                print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ, —É–∫–∞–∂–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª\n")
                print("–°–µ–±—è —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ–ª—å–∑—è –∏ —É–∂–µ –∏–º–µ—é—â–∏—Ö—Å—è –≤ —Å–æ–±—ã—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n")
        Interface.backend.add_guests_in_event(target_id_event, guests)  # –¥–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤  —Å–æ–±—ã—Ç–∏–µ
        print("–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–æ–±—ã—Ç–∏–µ")
        sleep(2)
        Interface.tasks_list.append(Interface.edit_event)

    @staticmethod
    def del_guests_event():
        "–£–¥–∞–ª–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ —Å–æ–±—ã—Ç–∏—è"
        print('*********–í—ã–≤–æ–¥–∏–º –í–∞—à–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏*********')
        Interface.backend.load_file_calendars(Interface.id_user)  # –∑–∞–≥—Ä—É–∂–∞–µ–º –≤ –ø–∞–º—è—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for elem in Interface.backend.info_calendars():
            print(elem)
        while True:
            source_id_calendar = input("–í–≤–µ–¥–∏—Ç–µ id —Å–≤–æ–µ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, —Å–æ–±—ã—Ç–∏–µ –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å\n")
            if not Interface.backend.check_id_calendar(source_id_calendar):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏
                # —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            else:
                break
        print('*********–í—ã–≤–æ–¥–∏–º —Å–æ–±—ã—Ç–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è*********')
        print("id, –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ, –¥–∞—Ç–∞, –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å, —Å–æ–∑–¥–∞—Ç–µ–ª—å, —É—á–∞—Å—Ç–Ω–∏–∫–∏")
        for elem in Interface.backend.show_events(source_id_calendar):
            print(elem.info_Event())
        while True:
            target_id_event = input("–í–≤–µ–¥–∏—Ç–µ id c–æ–±—ã—Ç–∏—è, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n")
            if not Interface.backend.check_id_event(target_id_event):  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏
                # —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö üòé")
            else:
                break
        while True:
            guests = input("–£–∫–∞–∂–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª, –∫–æ—Ç–æ—Ä—ã—Ö —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–æ–±—ã—Ç–∏—è\n")
            guests = guests.split()
            result = (Interface.id_user not in guests) and (Interface.backend.check_id_users_event(guests, target_id_event, "all"))
            if result:
                break
            else:
                print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ, —É–∫–∞–∂–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª\n")
                print("–°–µ–±—è —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ–ª—å–∑—è\n")
        Interface.backend.del_guests_in_event(target_id_event, guests)  # —É–¥–∞–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ —Å–æ–±—ã—Ç–∏—è
        print("–£—á–∞—Å—Ç–Ω–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Å–æ–±—ã—Ç–∏—è")
        sleep(2)
        Interface.tasks_list.append(Interface.edit_event)


if __name__ == "__main__":
    Interface.work()

